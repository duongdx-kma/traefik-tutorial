version: "3.3"

services:
  traefik:
    image: "traefik:v3.0"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro # config localtime
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #####################################
      # this file using traefik.yml
      #####################################
      - ./traefik.http.yml:/etc/traefik/traefik.yml
    networks:
      - traefik-net
      - frontend-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.traefik.duongdx.com`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.service=api@internal"

  frontend:
    image: "duong1200798/socket_app_react:latest"
    networks:
      - frontend-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.duongdx.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

  # config cloudflare tunnel
  cloudflaretunnel:
    image: cloudflare/cloudflared:latest
    # restart: unless-stoped
    # container_name: cloudflare-tunnel
    environment:
      - TUNNEL_TOKEN=$(cat token.pem)
    command: tunnel run
    # TUNNEL_TOKEN=$(cat token.pem)
    # tunnel --no-autoupdat run --token xxxx
    volumes:
      - ./cloudflare-tunnel.yml:/etc/cloudflared/config.yml
    networks:
      - traefik-net
      - frontend-net

# if traefik don't have access to this network => error
networks:
  traefik-net:
    driver: overlay

  frontend-net:
    driver: overlay

